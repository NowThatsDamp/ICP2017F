1.)
function [result] = untitled2(x,mu,sigma)
Half1 = (1/((sqrt(2*pi))*sigma));
Half2 = exp((-.5)*(((x-mu)/sigma)^2));
result = Half1*Half2;
end

>> untitled2(1,0,2)
ans =
    0.1760
>> normpdf(1,0,2)
ans =
    0.1760
    
    
2.)
function [t] = untitled2(Megg,c,roe,K,Toriginal,Tboil,Tcenter)
Half1 = ((Megg^(2/3))*c*(roe^(1/3)))/(K*(pi^2)*(((4*pi)/3)^(2/3)));
Half2 = log(0.76*((Toriginal-Tboil)/(Tcenter-Tboil)));
t = Half1*Half2;
end

>> untitled2(67,3.7,1.038,0.0054,4,100,70)
ans =
  396.5763
>> untitled2(67,3.7,1.038,0.0054,20,100,70)
ans =
  315.2179
  
  
  3.)
function [outputPolarStruct] = getPolar(inputCartesianStruct)
checkx = isfield(inputPolarStruct,'x');
checky = isfield(inputPolarStruct,'y');
if checkx == checky == 1 
outputPolarStruct.r = sqrt((inputCartesianStruct.x^2)+(inputCartesianStruct.x^2));
outputPolarStruct.phi = acos(inputCartesianStruct.x/outputPolarStruct.r);
else
disp('Please check your input fields');
end

function [outputCartesianStruct] = getCart(inputPolarStruct)
checkr = isfield(inputPolarStruct,'r');
checkphi = isfield(inputPolarStruct,'phi');
if checkr == checkphi == 1 
outputCartesianStruct.x = inputPolarStruct.r*cos(inputPolarStruct.phi);
outputCartesianStruct.y = inputPolarStruct.r*sin(inputPolarStruct.phi);
else
disp('Please check your input fields');
end

4.)


  
